version: "3"

services:
  postgres:
    image: "postgres:14.2"
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ongambl
    networks:
      - postgres-network
    # volumes:
    #   - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    # volumes:
    #   - ./db-data/mongo:/data/db

  backend-service:
    build:
      context: ./../backend-service
      dockerfile: ./../backend-service/backend-service.dockerfile
    restart: always
    ports:
      - "4000:4000"
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - kafka-network
      - rabbit-network
      - postgres-network

  chatgpt-article:
    build:
      context: ./../chatgpt-article
      dockerfile: ./../chatgpt-article/chatgpt-article-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - kafka-network
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9091
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9091
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - kafka-network


  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USER: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      NAME_ADDRESS: john.smith@example.com
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  migrate:
    image: migrate/migrate
    volumes:
      - ./../backend-service/migrations:/migrations
    command:
      [
        "-path",
        "migrations",
        "-database",
        "postgres://postgres:password@postgres/ongambl?sslmode=disable",
        "up",
      ]
    restart: on-failure:3
    links:
      - postgres
    depends_on:
      - postgres
      - backend-service
    networks:
    - postgres-network

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    networks:
    - rabbit-network
    # volumes:
    #   - ./db-data/rabbitmq/:/var/lib/rabbitmq

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - rabbit-network

networks:
  kafka-network:
    driver: bridge
  rabbit-network:
    driver: bridge
  postgres-network:
    driver: bridge